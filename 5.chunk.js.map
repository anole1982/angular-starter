{"version":3,"file":"5.chunk.js","sources":["webpack:///./src/app/+demo/+webrtc/webrtc.component.ts","webpack:///./src/app/+demo/+webrtc/webrtc.service.ts","webpack:///./src/app/+demo/+webrtc/index.ts","webpack:///./src/app/+demo/+webrtc/webrtc.module.ts","webpack:///./src/app/+demo/+webrtc/webrtc.routes.ts"],"sourcesContent":["import {\n  Component,\n  OnInit,\n  ViewChild,\n  ElementRef\n} from '@angular/core';\nimport { WebrtcService } from './webrtc.service';\nconsole.log('`Web rtc` component loaded asynchronously');\n\n@Component({\n  selector: 'webrtc',\n  template: `\n    <div class=\"select\">\n      <label for=\"audioSource\">Audio source: </label>\n      <select #audioSelect (change)=\"onAudioSelectChange(audioSelect.value)\">\n        <option *ngFor=\"let deviceInfo of audioDeviceInfos;\" value=\"{{deviceInfo.deviceId}}\">\n          {{deviceInfo.label}}\n        </option>\n      </select>\n    </div>\n    <div class=\"select\">\n      <label for=\"videoSource\">Video source: </label>\n      <select #videoSelect (change)=\"onVideoSelectChange(videoSelect.value)\">\n        <option *ngFor=\"let deviceInfo of videoDeviceInfos;\" value=\"{{deviceInfo.deviceId}}\">\n          {{deviceInfo.label}}\n        </option>\n      </select>\n    </div>\n    <button (click)=\"onStart()\">start </button>\n    <button (click)=\"onStop()\">stop </button>\n    <ul>\n      <ol *ngFor=\"let constraint of supportedConstraints\">\n          {{constraint}}\n      </ol>\n    </ul>\n    <video #video autoplay=\"true\" style=\"display:none;\"></video>\n    <canvas #canvas style=\"width:640px; height:480px;\"></canvas>\n  `\n})\nexport class WebrtcComponent implements OnInit {\n  public audioDeviceInfos = [];\n  public videoDeviceInfos = [];\n  public supportedConstraints = [];\n  public constraints = {\n    audio: {\n      optional: []\n    },\n    video: {\n      optional: []\n    }\n  };\n  @ViewChild('video')\n  private video: ElementRef;\n  @ViewChild('canvas')\n  private canvas: ElementRef;\n  private localStream: MediaStream;\n  constructor(private webrtcService: WebrtcService) {\n  }\n  public ngOnInit() {\n    this.gotSupportedConstraints();\n    this.webrtcService.enumerateDevices().then((deviceInfos) => {this.gotDevices(deviceInfos);});\n  }\n  public gotDevices(deviceInfos) {\n    console.log('gotDevices');\n    for ( let deviceInfo of deviceInfos) {\n      if (deviceInfo.kind === 'audioinput') {\n        this.audioDeviceInfos.push(deviceInfo);\n      } else if (deviceInfo.kind === 'videoinput') {\n        this.videoDeviceInfos.push(deviceInfo);\n      } else {\n        console.log('Found ome other kind of source/device: ', deviceInfo);\n      }\n      console.log(this.audioDeviceInfos, this.videoDeviceInfos);\n    }\n  }\n  public gotSupportedConstraints() {\n    let supportedConstraints = this.webrtcService.getSupportedConstraints();\n    for (let constraint in supportedConstraints) {\n      if (supportedConstraints.hasOwnProperty(constraint)) {\n       this.supportedConstraints.push(constraint);\n      }\n    }\n  }\n  public onVideoSelectChange(value) {\n      alert(value);\n      this.constraints.video.optional.push({sourceId : value});\n  }\n  public onAudioSelectChange(value) {\n    this.constraints.audio.optional.push({sourceId : value});\n  }\n  public onStart() {\n    this.webrtcService.getUserMedia(this.constraints).then((stream) => {this.handlerStream(stream);});\n  }\n  public onStop() {\n    if ( !!this.localStream ) {\n      this.localStream.getTracks().forEach( (track) => {\n        track.stop();\n      });\n    }\n  }\n  public handlerStream(stream) {\n    let self = this;\n    self.localStream = stream;\n    if (window.URL) {\n      this.video.nativeElement.src = window.URL.createObjectURL(stream);\n    } else {\n      this.video.nativeElement.src = stream;\n    }\n    let tick = function() {\n      requestAnimationFrame(tick);\n      let canvas = self.canvas.nativeElement;\n      let context = canvas.getContext('2d');\n      let width = parseInt(canvas.style.width);\n      let height = parseInt(canvas.style.height);\n      if (self.video.nativeElement.readyState === self.video.nativeElement.HAVE_ENOUGH_DATA) {\n        // Load the video onto the canvas\n        context.drawImage(self.video.nativeElement, 0, 0, width, height);\n        // Load the image data from the canvas\n        // let imageData = context.getImageData(0, 0, width, height);\n      }\n    }\n    tick();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/_angular2-template-loader@0.6.2@angular2-template-loader!./src/app/+demo/+webrtc/webrtc.component.ts","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class WebrtcService {\n  private media = navigator.mediaDevices;\n  public enumerateDevices() {\n    return this.media.enumerateDevices();\n  };\n  public getUserMedia(constraints) {\n    return this.media.getUserMedia(constraints);\n  }\n  public getSupportedConstraints() {\n    return this.media.getSupportedConstraints();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/_angular2-template-loader@0.6.2@angular2-template-loader!./src/app/+demo/+webrtc/webrtc.service.ts","export { WebrtcModule } from './webrtc.module';\n\n\n\n// WEBPACK FOOTER //\n// node_modules/_angular2-template-loader@0.6.2@angular2-template-loader!./src/app/+demo/+webrtc/index.ts","import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { routes } from './webrtc.routes';\nimport { WebrtcComponent } from './webrtc.component';\nimport { WebrtcService } from './webrtc.service';\nconsole.log('`Person CURD` bundle loaded asynchronously');\n\n@NgModule({\n  declarations: [\n    WebrtcComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild(routes),\n  ],\n  providers: [\n    WebrtcService\n  ]\n})\nexport class WebrtcModule {\n  public static routes = routes;\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/_angular2-template-loader@0.6.2@angular2-template-loader!./src/app/+demo/+webrtc/webrtc.module.ts","import { WebrtcComponent } from './webrtc.component';\n\nexport const routes = [\n  { path: '', component: WebrtcComponent,  pathMatch: 'full' },\n];\n\n\n\n// WEBPACK FOOTER //\n// node_modules/_angular2-template-loader@0.6.2@angular2-template-loader!./src/app/+demo/+webrtc/webrtc.routes.ts"],"mappings":";;;;;;;;;;;AAAA;AAMA;AACA;AAgCA;AAiBA;AAAA;AAhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtEA;AADA;AACA;AAAA;AAEA;AADA;AACA;AAAA;AAfA;AA9BA;AACA;AACA;AA2BA;AAkBA;AAjBA;AAqFA;AAAA;AArFA;;;;;;;;;;;;;ACvCA;AAGA;AADA;AAEA;AAUA;AATA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AADA;AACA;AAWA;AAAA;AAXA;;;;;;;;;ACHA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAeA;AAAA;AAEA;AADA;AADA;AAbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAFA;;;;;;;;;ACvBA;AAAA;AAAA;AAEA;AACA;AACA;;;;;A","sourceRoot":""}